#!/bin/bash
set -eu

self="`basename $0`"

POSTGRES_MASTER_BUILT=${POSTGRES_MASTER_BUILT:-false}
PGDATA="{{ postgresql_data_directory }}"
PGMARK="{{ postgresql_lib_dir }}/.done"
PGPORT={{ postgresql_port }}
DBNAME={{ dbname }}
TESTDBNAME=test_{{ dbname }}
PGPASSWORD="{{ pgpassword | default('root') }}"
export PGDATA PGPASSWORD

if [ -f "$PGMARK" ]; then
    echo 1>&2 "$self: Already initialized. Skipping..."
    exit 0
fi

if [ "$POSTGRES_MASTER_BUILT" != "true" ]; then
    # Security not so tight..
    PGPASSWORDFILE="{{ postgresql_conf_directory }}/pgpass.txt"
    echo $PGPASSWORD > $PGPASSWORDFILE
    echo 1>&2 "$self: Initializing Postgres Master DB..."
    echo -n 1>&2 "$self: "; {{ postgres_bin_path.stdout }}/initdb --encoding=UNICODE \
                           --pwfile=$PGPASSWORDFILE --username=postgres --auth=md5
fi

echo -n 1>&2 "$self: "; service postgresql start
# sleep 3
echo 1>&2 "$self: Creating {{ dbname }} database and user ..."
(
  cat <<-EOF
    CREATE USER {{ dbname }} WITH PASSWORD '$PGPASSWORD';
    CREATE EXTENSION HSTORE;
    CREATE DATABASE {{ dbname }} OWNER {{ dbname }} ENCODING 'UNICODE';
    CREATE DATABASE test_{{ dbname }} OWNER {{ dbname }} ENCODING 'UNICODE';
EOF
) | psql --port=$PGPORT --username=postgres postgres

echo 1>&2 "$self: Creating hstore extension ..."
echo "CREATE EXTENSION HSTORE;" | psql --port=$PGPORT --username=postgres {{ dbname }}
echo "CREATE EXTENSION HSTORE;" | psql --port=$PGPORT --username=postgres test_{{ dbname }}

echo -n 1>&2 "$self: "; service postgresql stop
echo 1>&2 "$self: Initialized Postgres DB"
exit 0
